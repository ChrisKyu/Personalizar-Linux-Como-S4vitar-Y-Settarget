-------------------------------------------------------------------------------------------------
-																								-
-																								-
-		Es recomendable seguir el video de s4vitar y usar este bloc de notas como apoyo			-
-																								-
-																								-
-------------------------------------------------------------------------------------------------

- Cambia los /TuUsuario/ por tu nombre de usuario en que utilices en tu kali/parrot/arch/etc.
- Cualquier facho que encontréis, notificármelo para poder cambiarlo, gracias.



1. Instalamos los siguientes paquetes:

sudo apt install build-essential git vim xcb libxcb-util0-dev libxcb-ewmh-dev libxcb-randr0-dev libxcb-icccm4-dev libxcb-keysyms1-dev libxcb-xinerama0-dev libasound2-dev libxcb-xtest0-dev libxcb-shape0-dev



2. Instalamos bspwm y sxhkd:

cd /home/TuUsuario/Downloads/
git clone https://github.com/baskerville/bspwm.git
git clone https://github.com/baskerville/sxhkd.git
cd bspwm/
make
sudo make install
cd ../sxhkd/
make
sudo make install

sudo apt install bspwm



3. Cargamos en bspwm y sxhkd ficheros de ejemplo:

mkdir ~/.config/bspwm
mkdir ~/.config/sxhkd
cd /home/TuUsuario/Downloads/bspwm/
cp examples/bspwmrc ~/.config/bspwm/
chmod +x ~/.config/bspwm/bspwmrc
cp examples/sxhkdrc ~/.config/sxhkd/



4. Abrimos el sxhkdrc y configuramos el tipo de terminal así como algunos keybings:
Podemos abrir el .config **rc (El "rc" es de ejemplo, es una configuración que te dan por defecto)

# terminal emulator
super + Return
		gnome-terminal --> Para al hacer Windows + Enter , arbir una terminal.

# focus the node in the given direction
super + {_,shift + }{Left,Down,Up,Right}
		bspc node -{f,s} {west,south,north,east}


# preselect the direction
super + ctrl + alt + {Left,Down,Up,Right}
		bspc node -p {west,south,north,east}


# cancel the preselection for the focused node 
super + ctrl + alt + spce
		bspc node -p cancel


#
# move/resize
#

Comentamos los siguientes dos parrafos de comandos. desde expand a window hasta move a floating (esta última no)

#move a floating window
super + ctrl {Left,Down,Up,Right}
		***

Luego hacemos "Enter" y añadimos :

# Custom move/resize
alt + super + {Left,Down,Up,Right}
	/home/TuUsuario/.config/bspwm/scripts/bspwm_resize {west,south,north,east}

# -------------------------------------------------------------------------------



5. Creamos el archivo bspwm_resize :

cd /home/TuUsuario/.config/bspwm/
mkdir scripts
cd scripts
touch bspwm_resize
chmod +x bspwm_resize
nano bspwm_resize 		# y pegamos :

#!/usr/bin/env dash

if bspc query -N -n focused.floating > /dev/null; then
		step=20
else
		step=100
fi

case "$1" in
		west) dir=right; falldir=left; x="-$step"; y=0;;
		east) dir=right; falldir=left; x="$step"; y=0;;
		north) dir=top; falldir=bottom; x=0; y="-$step";;
		south) dir=top; falldir=bottom; x=0; y="$step";;
esac

bspc node -z "$dir" "$x" "$y" || bspc node -z "$falldir" "$x" "$y"
# -------------------------------------------------------------------------------

Guardamos y ya estaria.



6. Procedemos a instalar la polybar. Para ello instalaremos los siguientes paquetes :

sudo apt install cmake cmake-data pkg-config python3-sphinx libcairo2-dev libxcb1-dev libxcb-util0-dev libxcb-randr0-dev libxcb-composite0-dev python3-xcbgen xcb-proto libxcb-image0-dev libxcb-ewmh-dev libxcb-icccm4-dev libxcb-xkb-dev libxcb-xrm-dev libxcb-cursor-dev libasound2-dev libpulse-dev libjsoncpp-dev libmpdclient-dev libcurl4-openssl-dev libnl-genl-3-dev

Para instalar la polybar hacemos lo siguiente :

cd /home/TuUsuario/Downloads/
git clone --recursive https://github.com/polybar/polybar
cd polybar/
mkdir build
cd build/
cmake ..
make -j $(nproc)
sudo make install



7. Procedemos con la instalación de Picom para ajustar las transparencias :

Primeramente, instalamos los siguientes paquetes, no sin antes actualizar el sistema:

sudo apt update
sudo apt install meson libxext-dev libxcb1-dev libxcb-damage0-dev libxcb-xfixes0-dev libxcb-shape0-dev libxcb-render-util0-dev libxcb-render0-dev libxcb-randr0-dev libxcb-composite0-dev libxcb-image0-dev libxcb-present-dev libxcb-xinerama0-dev libpixman-1-dev libdbus-1-dev libconfig-dev libgl1-mesa-dev libpcre3-dev libevdev-dev uthash-dev libev-dev libx11-xcb-dev libxcb-glx0-dev

Posteriormente, ejecutamos los siguientes comando bajo el directorio ~/Downloads :

git clone https://github.com/yshui/picom.git
cd picom/
git submodule update --init --recursive
meson --buildtype=release . build
ninja -C build
sudo ninja -C build install



8. Instalamos rofi (Posteriormente instalaremos el tema Nord para rofi):

sudo apt install rofi



9. En este punto, reiniciamos el equipo y seleccionamos bspwm (Probamos que los shortcuts estén funcionando correctamente)
Para matar la sesión actual (En kali linux son las tres rayitas que aparecen en la parte superior):

kill -9 -1 

Para mudarnos a bspwm tenemos que hacer click en el circulito y seleccionamos "bspwm"



10. Configuramos un poco la terminal e instalamos las 
Hack Nerd Fonts, además del Firefox (hay que descargarse la última versión, también instalaremos firejail con 'apt intall firejail' con el objetivo de lanzar firefox bajo este contexto enjaulado con sxhkd). [Las fuentes de Hack Nerd Fonts deben ir descomprimidas en /usr/local/shares/fonts/ , una vez hecho hay que ejecutar el comando 'fc-cache -v']

Abrimos rofi, para ello hacemos:

nano ~/.config/sxhkd/sxhkdrc

# prgram launcher
super + d
		rofi -show run

Siempre que añadamos un nuevo comando debemos de reiniciar bspwm con:

super + alt + r

Y es recomandable también usar:

super + esc

Para descomprimir firefox usamos:

tar -xf firefox-****

Crear Shortcuts (firejail + firefox) (Lo añadimos abajo del todo):

nano ~/.config/sxhkd/sxhkdrc

# Open Firefox
super + shift + f
		firejail firefox

(Recordad hacer 'super + alt + r' y 'super + esc')


Buscamos en Firefox:

hack nerd fonts (Entramos en nerdfonts.com)
Hacemos click en 'FONTS DOWNLOADS' y nos descargamos la que queramos.
Tras descargarlo hacemos:

cd /usr/local/share/fonts
mv /home/TuUsuario/Downloads/Hack.zip .
unzip Hack.zip
rm Hack.zip

Nos iremos a la terminal, (file>Preferences), elegiremos la fuente 'Hack' > 'Ok' > 'Apply' > 'Ok'



11. Instalamos el addon 'FoxyProxy' para firefox.



12. Configuramos la privacidad en firefoc y el directorio de descargas principal.



13. Instalamos 'feh' con 'apt install feh' para poder cargar fondos de pantalla.



14. Cargamos en el archivo bspwmrc justo al final la siguientes línea.

feh --bg-fill /home/TuUsuario/Desktop/images/bg.jpg



15. Para configurar nuestra Polybar, clonaremos primeramente en 'Downloads' el siguiente repositorio:

git clone https://github.com/VaughnValle/blue-sky.git

Posteriormente, ejecutaremos los siguientes comandos:

mkdir ~/.config/polybar
cd ~/Downloads/blue-sky/polybar/
cp * -r ~/.config/polybar
echo '~/.config/polybar/./launch.sh' >> ~/.config/bspwm/bspwmrc
cd fonts
sudo cp * /usr/share/fonts/truetype/
fc-cache -v

Hacemos super + Shift + R para cargar la configuración y deberíamos ver la Polybar por arriba.

Colores :

cd ~/.config/polybar/
nano workspace.ini

En [module/workspaces]

label-active = "∙ "
label-active-foreground = {color.red}

label-occupied = "%icon% "
label-occupied-foreground = ${color.yellow}



16. Para configurar Picom y ajustar las transparencias además de bordeados de ventana, ejecutamos los siguientes pasos:

mkdir ~/.config/picom
cd ~/.config/picom
cp ~/Downloads/blue-sky/picom.conf .

Editamos el archivo picom.conf (nano picom.conf) y cambiamos 'backend = "glx"' por 'backend = "xrender"', comentando el de glx. Posteriormente, comentamos todas las líneas referentes a glx (En algunos ordenadores al dejar glx puesto se puede llegar a experimentar una lentitud muy molesta).

Antes de recargar la configuración, hacemos un seguimineto del ratón para saber en qué ventana estamos con la siguientes instrucción en el 'bspwm':

bspc config focus_follows_pointer true

Posteriormente, ejecutamos los siguientes comandos para aplicar los bordeados:

echo 'picom --experimental-backends &' >> ~/.config/bspwm/bspwmrc
echo 'bspc config border_width 0' >> ~/.config/bspwm/bspwmrc



17. Configuramos los colores de la polybar (paleta central), además de las paletas deseadas.

Estructura de un nuevo módulo:

Previamente tenemos que crear una carpeta en '~/.config/bin'

[module/tumodulo]
type = custom/script
interval = 2
exec = ~/.config/bin/binario.sh

Por ejemplo, para el módulo del ethernet_status:

#!/bin/sh

echo "%{F#2495e7} %{F#ffffff}$(/usr/sbin/ifconfig eth0 | grep "inet " | awk '{print $2}')%{u-}"

Para el módulo de hackthebox_status.sh

#!/bin/sh

IFACE=$(/usr/sbin/ifconfig | grep tun0 | awk '{print $1}' | tr -d ':')

if [ "$IFACE" = "tun0" ]; then
	echo "%{F#1bbf3e} %{F#ffffff}$(/usr/sbin/ifconfig tun0 | grep "inet " | awk '{print $2}')%{u-}"
else
	echo "%{F#1bbf3e}%{u-} Disconnected"
fi



18. Configuramos el tema Nord de Rofi:

mkdir -p ~/.config/rofi/themes
cp ~/Downloads/blue-sky/nord.rasi ~/.config/rofi/themes

Posteriormente con 'rofi-theme-selector' seleccionamos el tema Nord.



19. Instalamos slim y slimlock

Instalamos los siguientes paquetes:

sudo apt update
sudo apt install slim libpam0g-dev libxrandr-dev libfreetype6-dev libimlib2-dev libxft-dev

Posteriormente, ejecutamos los siguientes comando:

cd ~/Downloads/
git clone https://github.com/joelburget/slimlock.git
cd slimlock/
sudo make
sudo make install
cd ~/Downloads/blue-sky/slim
sudo cp slim.conf /etc/
sudo cp slimlock.conf /etc/
sudo cp -r default /usr/share/slim/themes

Si queremos cambiar la imagen del panel, nos vamos a la ruta '/usr/share/slim/themas/default' y retocamos el archivo 'panel.png' .



20. Reiniciamos el sistema y una vez arrancado, incorporamos en el archivo 'bspwmrc' la siguientes línea para arreglar el cursor:

xsetroot -cursor_name left_ptr &



21. Instalamos la powerlevel10k en zsh

Para quitar el icono de la derecha, ejecutamos:

nano .p10k.zsh
Y comentamos todo lo que hay después de 'typeset -g POWERLEVEL9K_RIGHT_PROMT_ELEMENTS=(' (Esta dicha no, solo lo de abajo).

Debemos repetir este proceso como root.



22. Creamos anlace simbólico de la zshrc para root



23. Cambiamos el tipo de shell por defecto tanto para root como para el usuario con bajos privilegios:

usermod --shell /usr/bin/zsh TuUsuario
usermod --shell /usr/bin/zsh root



24. Retocamos el archivo .p10k.zsh para aducarlo a nuestro gusto

Para el root, podemos ir a 'POWERLEVEL9K_CONTEXT_ROOT_TEMPLATE' para asignar el hashtag.

Comentamos la siguiente línea:

# POWERLEVEL9K_CONTEXT_PREFIX='%246Fwith '

Para evitar un pequeño problema de permisos a la hora de desde el usuario root migrar con 'su' al usuario con bajos privilegios, ejecutamos:

chown TuUsuario:TuUsuario /root
chown TuUsuario:TuUsuario /root/.cache -R
chown TuUsuario:TuUsuario /root/.local -R



25. Instalamos bat, lsd, fzf y ranger



26. Instalar el plugin sudo



27. Instalamos nvim con el theme nord

cd .config/nvim/
wget https://github.com/articicestudio/nord-vim/archive/master.zip
unzip master.zip
rm master.zip
mv nord-vim-master/colors/ .
rm -r nord-vim-master/

Añadimos el archivo 'init.vim' la línea 'colorscheme nord' justo al final.

wget https://raw.githubusercontent.com/Necros1s/lotus/master/lotus.vim
wget https://raw.githubusercontent.com/Necros1s/lotus/master/lotusbar.vim
wget https://raw.githubusercontent.com/Necros1s/lotus/master/init.vim (Quitamos las líneas del plug)

Añadimos justo al final del 'init.vim' la línea 'syntax on' para la detección de sintaxis.

[TODO ESTE PROCESO HAY QUE HACERLO TAMBIÉN COMO EL USUARIO ROOT]

Incorporamos posteriormente las siguientes líneas al final del zshrc apra que al salir del nvim no se quede el cursor en modo Block:

# Change cursor shape for different vi modes.
function zle-keymap-select {
	if [[ $KEYMAP == vicmd ]] || [[$1 = 'block' ]]; then
		echo -ne '\e[1 q'
	elif [[ $KEYMAP == main ]] || [[ $KEYMAP == viins ]] || [[ $KEYMAP = '' ]] || [[ $1 = 'beam' ]]; then
		echo -ne '\e[5 q'
	fi
}
zle -N zle-keymap-select


# Start with beam shape cursor on zsh startup and ofter every command.
zle-line-init() { zle-keymap-select 'beam'}



28. Instalamos Oh My Tmux



29. Whichsystem.py

https://github.com/Akronox/WichSystem.py



30. fastTCPScan.go